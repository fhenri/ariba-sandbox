/*
    Copyright (c) 1996-2012 Ariba, Inc.
    All rights reserved. Patents pending.

    Rules file.

    Generated on Wed Jan 18 12:18:58 CET 2012

    Do not edit this file!
*/
{
    Chains = ( );
    Classname = ariba.approvable.rules.RuleSet;
    Constraints = ( );
    Current = true;
    EditRule = "/* \n  Edit Rule:\n     1. Purchase agent can make any changes.\n     2. Preparer is not allowed to make\n        changes after submission\n     3. Otherwise, invalidate.\n*/\nfunction edit_rule (user, a, fields, changes)\n{\n    if (user.hasPermission(\"PurchasingAgent\")) {\n        return Approvable.EditAllowedWithoutEffects;\n    }\n    if (user.equals(a.getPreparer())) {\n        return Approvable.EditNotAllowed;\n    }\n    return Approvable.EditRequiresReapprovals;\n}\nedit_rule;\n";
    EditRulePermission = RuleEditor;
    EditRuleType = JavaScriptTemplate;
    Edits = (
        {
            Action = { TemplateName = EditWithoutEffects;};
            Classname = "ariba.approvable.rules.JavaScriptTemplateEditRule";
            Condition = (
                {
                    ParameterValues = (
                        {
                            GroupValue = "Purchasing Agent";
                            ParameterName = Group;
                            TemplateName = IsUserInGroup;
                        }
                    );
                    TemplateName = IsUserInGroup;
                }
            );
            Enabled = true;
            Name = "Supplier Manager";
            Permission = RuleEditor;
        }
    );
    Filters = ( );
    LoadDB = true;
    Name = "JavaScript SupplierEForm Rules";
    Simples = (
        {
            Classname = "ariba.approvable.rules.JavaScriptSimpleRule";
            Condition = "function suppliermanager_condition (r) \r\n{\r\n    return true;\r\n}\r\nsuppliermanager_condition;";
            Enabled = true;
            Name = SupplierManager;
            Permission = RuleEditor;
            Result = "var SupplierManagerGroup = Group.getGroup(\"Supplier Manager\");\r\n\r\nfunction suppliermanager_action (r) \r\n{\r\n    return ApprovalRequest.create(r,\r\n                               SupplierManagerGroup,\r\n                               true,\r\n                               \"ruleReasons\", \"SupplierManagerApproves\");\r\n}\r\nsuppliermanager_action;";
        }
    );
    Type = sandbox.eform.supplier.SupplierEForm;
}
